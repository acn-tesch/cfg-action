AWSTemplateFormatVersion: '2010-09-09'
#This script launches a secure hardened linux EC2 instance. CFT needs to be updated/modified based on client requirements.
#Author: Mustakim Dalal - mustakim.dalal@accenture.com

Description: 'Service Catalog: EC2 Linux Instance.'

#Groups parameters based on category
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPC
          - LinuxSubnet
          - AvailabilityZone
      - Label:
          default: Linux Instance Configuration
        Parameters:
          - LinuxInstanceType
          - LatestAmiId
      - Label:
          default: Security Configuration
        Parameters: 
          - DisableApiTermination
          - DeleteOnTermination
          - PendingWindowInDays  


#Parameters
#Update/modify based on client needs

Parameters:
  VPC:
    Type: 'AWS::EC2::VPC::Id'
    Description: Select the VPC where the EC2 instances will be created
    ConstraintDescription: must be an existing VPC
  LinuxSubnet:
    Type: 'AWS::EC2::Subnet::Id'
    Description: Select subnet for Linux Instance
    ConstraintDescription: must be an existing subnet
  

  #Instance type requirements 
  #Update/modify based on client needs

  LinuxInstanceType:
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large

    Default: t3.micro
    Description: Amazon EC2 Linux Instance Type
    Type: String
  

  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

  DisableApiTermination:
    Type: String
    Description: Prevent APIs, including CloudFormation, from being able to delete EC2 instances
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'

  DeleteOnTermination:
    Type: String
    Description: Should EBS volumes be deleted upon instance termination?
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'

  PendingWindowInDays:
    Description: Specifies number of days before AWS deletes a CMK
    Default: 7 
    AllowedValues: [7, 14, 30] #number of days
    Type: Number      

  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name


#RESOURCE CREATION


Resources:

  #SECURITY GROUP CREATION
  #APPLY LEAST PRIVILEGE
  #APPLY CLIENT SPECIFIC NEEDS
   
  LinuxSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enables Access to Linux EC2 Instance
      VpcId:
        Ref: VPC
                  
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'

        

  #Create secure EC2 Linux Instance       
  LinuxInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      Monitoring: True 
      IamInstanceProfile: 
        Ref: Ec2InstanceProfile
      ImageId:
        Ref: LatestAmiId
      InstanceType:
        Ref: LinuxInstanceType
      AvailabilityZone: 
        Ref: AvailabilityZone
      UserData: 
        Fn::Base64: !Sub |
          #!bin/bash
          yum update -y
      NetworkInterfaces:
        - GroupSet:
            - !Ref LinuxSecurityGroup
          
          DeviceIndex: '0'
          DeleteOnTermination: true
          SubnetId: !Ref LinuxSubnet   
     #Tagging requirements -- Client  
      Tags:
        - Key: Linux Server
          Value: Service-Catalog-EC2-Linux

      #specify with client
      #Encryption turned on
      #KMS Key attached
      BlockDeviceMappings:
        - DeviceName: /dev/xvdh
          Ebs:
            Encrypted: true
            VolumeSize: '20'
            KmsKeyId: !Ref KMS
            

  #KMS CREATION FOR ENCRYPTION 
  KMS:
    Type: AWS::KMS::Key #create the kms key resource 
    Properties:
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          Action: kms:*
          Resource: '*'
      PendingWindowInDays: !Ref PendingWindowInDays


  #SSM role creation -- Security best practices to use SSM instead of SSH/remote access

  SSMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Policies: []
      RoleName: Ec2RoleForSSM
      Description: EC2 IAM role for SSM access

  #Allow SSM access instead of SSH / remote access. #Security Best Pratice

  Ec2InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: Ec2RoleForSSM
      Roles:
        - Ref: SSMRole
  

#USE if Internet Connectivity is needed for EC2 Instance
#Creates a VPC endpoint in an existing VPC. VPC endpoints allow private connectivity from an VPC to EC2 instance

#Need to either create a new security group or add rule to existing security group to allow access to ec2 GPC endpoint
#Update based on client requirements

  ecVPCEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName:
        'Fn::Join':
          - ''
          - - com.amazonaws.
            - Ref: 'AWS::Region'
            - .ec2
      VpcId: '!Ref VPC'
      SubnetIds: '!Ref LinuxSubnet'
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Ref: LinuxSecurityGroup

##Additional features will be added based on client needs


#UPDATE LATER

Outputs:
  TemplateID:
    Value: Service-Catalog-EC2-Linux-Prodct
  AWSRegionName:
    Value:
      Ref: 'AWS::Region'
  LinuxInstanceId:
    Value:
      Ref: LinuxInstance
  LinuxInstancePrivateIpAddress:
    Value:
      'Fn::GetAtt':
        - LinuxInstance
        - PrivateIp
  LinuxInstanceAvailabilityZone:
    Value:
      Ref: AvailabilityZone 

  LinuxSubet:
    Value:
      Ref: LinuxSubnet
  LinuxInstanceType:
    Value:
      Ref: LinuxInstanceType
  VPC:
    Value:
      Ref: VPC
